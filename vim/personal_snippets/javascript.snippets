priority -50

# TODO
# if/elseif/else (with/without braces)
# See this file for further ideas:
# https://github.com/honza/vim-snippets/blob/master/UltiSnips/javascript.snippets

snippet cl "console.log" w
console.log($1)
endsnippet

snippet d "debugger" b
debugger
endsnippet

snippet jd "jsdoc" b
/**
* $3
* @return {${1:type}} - $2
*/
endsnippet

snippet ja "jsdoc arg" w
@arg {${1:type}} ${2:name} - 
endsnippet

snippet jr "jsdoc return" w
@return {${1:type}} - 
endsnippet

snippet jt "jsdoc throws" w
@throws {${1:type}}
endsnippet

snippet v "var" b
var ${1:varname} = 
endsnippet

snippet r "require" b
var ${1:varname} = require('${2:$1}');
endsnippet

snippet th "throw" b
throw new ${1:Error($2)}
endsnippet

snippet for "for loop" w
for (var i=0; i<$1; i++) {
	$0
}
endsnippet

snippet sw "switch" w
switch ($1) {
	case $2:
		$3
		break
	$0
}
endsnippet

snippet f "function" w
function($1) { $2 }
endsnippet

snippet meth "method" w
${1:methodName}: function($2) {
	$0
},
endsnippet



#===================
# Testing snippets
#===================

snippet t "tape test" w
test('$1', function(t) {
	$2
	t.end()
});
endsnippet

snippet describe "mocha describe" w
describe('$1', function($2) {
	$0
});
endsnippet

snippet it "mocha it" w
it('$1', function($2) {
	$0
});
endsnippet

snippet before "mocha before" w
before(function($1) {
	$0
});
endsnippet

snippet after "mocha after" w
after(function($1) {
	$0
});
endsnippet

snippet beforeEach "mocha beforeEach" w
beforeEach(function($1) {
	$0
});
endsnippet

snippet afterEach "mocha afterEach" w
afterEach(function($1) {
	$0
});
endsnippet

snippet ase "assert.strictEqual()" w
assert.strictEqual($1,$2);
endsnippet

snippet aok "assert.ok()" w
assert.ok($1);
endsnippet


# React
snippet rcc "React.createClass" w
React.createClass({
	displayName: '$1',

	render: function() {
		return $0
	}
})
endsnippet
