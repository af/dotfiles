set nocompatible            " we're using Vim, not Vi

"===============================================================================
" NeoBundle setup
"===============================================================================
" Besides the bundles to install, assume that everything until the end of this
" section is required for NeoBundle's setup process.
if has('vim_starting')
   set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))
NeoBundleFetch 'Shougo/neobundle.vim'

" vim plugins, managed by NeoBundle
NeoBundle 'kien/ctrlp.vim', 'b5d3fe66'
NeoBundle 'techlivezheng/vim-plugin-minibufexpl', '349a9fbb7'
NeoBundle 'tpope/vim-fugitive', '124550'
NeoBundle 'airblade/vim-gitgutter', '878c3422'
NeoBundle 'af/vim-powerline'
NeoBundle 'tpope/vim-sleuth', '039e2cd'
NeoBundle 'tomtom/tcomment_vim', '3d0a9975'

" theme/syntax related plugins:
NeoBundle 'tomasr/molokai', 'e7bcec7573'
NeoBundle 'wavded/vim-stylus', '046ccf1d'
NeoBundle 'scrooloose/syntastic', 'f92741d3'
NeoBundle 'colorizer', 'aae6b518'

" plugins to try/relearn: sparkup, snipmate, yankring, ack.vim

filetype plugin indent on
NeoBundleCheck
"===============================================================================
" (End of NeoBundle setup)
"===============================================================================



"===============================================================================
" General Vim settings
"===============================================================================
set visualbell
set history=500             " longer command history (default=20)
let mapleader = ","         " <leader> is our personal modifier key (use ,)
set noswapfile              " Disable swap files
"set directory=~/.vim/swp    " where the .swp files go (if enabled)

" File/buffer settings
autocmd BufWinEnter,BufNewFile * silent tabo    " Ensure only one tab is open
set hidden                  " TODO: revisit this. Hides instead of unloads buffers
set autoread                " reload files on changes (ie. changing git branches)
set encoding=utf-8
set scrolloff=3             " # of lines always shown above/below the cursor

" Indenting & white space
set expandtab
set tabstop=4 shiftwidth=4 softtabstop=4
set autoindent
set list listchars=tab:›\ ,trail:·          " mark trailing white space
"set list listchars=tab:›\ ,trail:·,eol:¬   " mark trailing white space (with eol)


"===============================================================================
" Display/window settings
"===============================================================================
syntax on
set bg=dark
set number                  " line number gutter
set ruler                   " line numbers at bottom of page
set showcmd
set title
set wildmenu
set wildignore=.svn,.git,.gitignore,*.pyc,*.so,*.swp,*.jpg,*.png,*.gif,node_modules
set laststatus=2            " Always show a status line for lowest window in a split
set cursorline              " highlight the full line that the cursor is currently on
set colorcolumn=80,100      " Highlight these columns with a different bg


"===============================================================================
" Searching & Replacing
"===============================================================================
set ignorecase
set smartcase               " override 'ignorecase' if search term has upper case chars
set incsearch               " incremental search
set showmatch
set hlsearch                " highlight searched items
set gdefault                " use 'global' mode by default for substitutions

" Clear search highlighting with ', ', use python-style search regexes:
nnoremap <leader><space> :noh<cr>
nnoremap / /\v
vnoremap / /\v
nnoremap ? ?\v
vnoremap ? ?\v


"===============================================================================
" Line wrapping
"===============================================================================
set wrap
set textwidth=99
set formatoptions=qrn1
nnoremap j gj
nnoremap k gk


"===============================================================================
" Colorscheme
"===============================================================================
color molokai
hi normal guibg=black       " gvim/mvim: override bg color to use full black
set guifont=Monaco:h14      " gvim/mvim: Bump up the default fontsize


"===============================================================================
" MacVim/GVIM Overrides
"===============================================================================
if has('gui_running')
    set transp=8            " Slight window transparency
elseif $TERM == "xterm-256color" || $TERM == "screen-256color" || $COLORTERM == "gnome-terminal"
    set t_Co=256            " Richer colours if our terminal can handle it.
endif


"===============================================================================
" Plugin customization
"===============================================================================
" Ctrl-P
nmap <leader><leader> :CtrlP<CR>
nmap T :CtrlPBuffer<CR>
let g:ctrlp_open_new_file = 'r'
let g:ctrlp_open_multiple_files = 'i'
let g:ctrlp_clear_cache_on_exit = 1

" gitgutter
" OS X's default vim doesn't have signs support, so disable it for that editor.
if has('signs')
    map! <C-j> <esc>:GitGutterNextHunk<CR>
    map <C-j> :GitGutterNextHunk<CR>
    map! <C-k> <esc>:GitGutterPrevHunk<CR>
    map <C-k> :GitGutterPrevHunk<CR>
else
    let g:gitgutter_enabled = 0
endif

" Syntastic display customizations:
" TODO: update colors so they work in console vim also
let g:syntastic_error_symbol = '!!'
let g:syntastic_warning_symbol = '!!'
hi SyntasticErrorSign guifg=#ff0000
hi SyntasticWarningSign guifg=#ff0000

" Syntastic checker config:
let g:syntastic_python_checkers=['pyflakes']

" MiniBufExpl
nnoremap <silent> <C-u> :MBEbd<CR>     " typing <C-u> will 'unload' the current buffer

" Colorizer
nnoremap <leader><F2> :ColorToggle<CR>

"===============================================================================
" Key Bindings: Moving around
"===============================================================================

" (built-in)
" <C-O> - move the cursor position back in the jump list
" <C-I> - move the cursor position forward in the jump list

" Navigating between buffers:
map! <C-h> <esc>:bp<CR>
map <C-h> :bp<CR>
map! <C-l> <esc>:bn<CR>
map <C-l> :bn<CR>

"EXPERIMENTAL!
" Save current file every time we leave insert mode
" This causes a problem where a "c" is entered when opening a file,
" so I should probably rewrite this to use an autocmd instead (InsertLeave?)
" http://learnvimscriptthehardway.stevelosh.com/chapters/12.html
inoremap <esc> <esc>:w<CR>
nnoremap <esc> <esc>:w<CR>


"===============================================================================
" Filetype-specific settings
"===============================================================================
" filetype detection for syntax highlighting
au BufNewFile,BufRead *.mustache set filetype=mustache
autocmd FileType mustache set ft=html.mustache

" JSON files: set filetype to json for syntastic, use js highlighting:
au BufRead,BufNewFile *.json set filetype=json
au BufRead,BufNewFile *.json setlocal syntax=javascript
